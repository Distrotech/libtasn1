.\" DO NOT MODIFY THIS FILE!  It was generated by gdoc.
.TH "asn1_der_decoding_startEnd" 3 "3.3" "libtasn1" "libtasn1"
.SH NAME
asn1_der_decoding_startEnd \- API function
.SH SYNOPSIS
.B #include <libtasn1.h>
.sp
.BI "int asn1_der_decoding_startEnd(asn1_node " element ", const void * " ider ", int " len ", const char * " name_element ", int * " start ", int * " end ");"
.SH ARGUMENTS
.IP "asn1_node element" 12
pointer to an ASN1 element
.IP "const void * ider" 12
vector that contains the DER encoding.
.IP "int len" 12
number of bytes of *\fIider\fP: \fIider\fP[0]..\fIider\fP[len\-1]
.IP "const char * name_element" 12
an element of NAME structure.
.IP "int * start" 12
the position of the first byte of NAME_ELEMENT decoding
(\fIider\fP[*start])
.IP "int * end" 12
the position of the last byte of NAME_ELEMENT decoding
(\fIider\fP[*end])
.SH "DESCRIPTION"
Find the start and end point of an element in a DER encoding
string. I mean that if you have a der encoding and you have already
used the function \fBasn1_der_decoding()\fP to fill a structure, it may
happen that you want to find the piece of string concerning an
element of the structure.

One example is the sequence "tbsCertificate" inside an X509
certificate.
.SH "RETURNS"
\fBASN1_SUCCESS\fP if DER encoding OK, \fBASN1_ELEMENT_NOT_FOUND\fP
if ELEMENT is \fBasn1_node\fP EMPTY or \fIname_element\fP is not a valid
element, \fBASN1_TAG_ERROR\fP or \fBASN1_DER_ERROR\fP if the der encoding
doesn't match the structure ELEMENT.
.SH COPYRIGHT
Copyright \(co 2006-2013 Free Software Foundation, Inc..
.br
Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
.SH "SEE ALSO"
The full documentation for
.B libtasn1
is maintained as a Texinfo manual.  If the
.B info
and
.B libtasn1
programs are properly installed at your site, the command
.IP
.B info libtasn1
.PP
should give you access to the complete manual.
